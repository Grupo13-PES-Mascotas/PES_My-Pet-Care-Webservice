plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.1.0'
    id 'java'
    id 'jacoco'
}

group = 'org.pesmypetcare'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.google.firebase:firebase-admin:6.12.2'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.3'
    /*implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'*/
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    outputs.dir snippetsDir as Object
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
    dependsOn test
}

task decryptTask(type: Exec) {
    workingDir projectDir
    if (!file("my-pet-care-85883-firebase-adminsdk-voovm-76b1b008f0.json").exists()) {
        if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
            commandLine 'cmd', './.github/scripts/decrypt_key.sh'
        } else {
            commandLine 'chmod +x ./.github/scripts/decrypt_key.sh'
            commandLine 'sh', './.github/scripts/decrypt_key.sh'
            println System.getenv('FIREBASE_PASSPHRASE')
        }
    }
    if (file("my-pet-care-85883-firebase-adminsdk-voovm-76b1b008f0.json").exists()) {
        println 'exists'
    } else {
        println 'not exists'
    }
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', 'echo'
    } else {
        commandLine 'echo'
    }
    if (file("chivato.txt").exists()) {
        println 'chivato exists'
    }
}

task copyJson(type: Copy) {
    from file("my-pet-care-85883-firebase-adminsdk-voovm-76b1b008f0.json")
    into file("$buildDir/libs")
}

compileJava {
    dependsOn decryptTask
}

build {
    finalizedBy copyJson
}
